[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "modified": "2020-07-25 20:19:57.770639",
  "name": "Purchase Order-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Purchase Order', {\n\trefresh: function(frm) {\n\t\thide_tax_fields(frm);\n\t\thide_subscription_section(frm);\n\t\tset_field_property_for_documents(frm);\n\t\tset_field_property_for_other_documents(frm);\n\t},\n\tset_warehouse: function(frm){\n\t\tif(frm.doc.set_warehouse){\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'one_fm.purchase.utils.get_warehouse_contact_details',\n\t\t\t\targs: {'warehouse': frm.doc.set_warehouse},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tvar contact = r.message;\n\t\t\t\t\tif(contact){\n\t\t\t\t\t\tif(contact[0]){\n\t\t\t\t\t\t\tfrm.set_value('one_fm_warehouse_contact_person', contact[0].contact_display);\n\t\t\t\t\t\t\tfrm.set_value('one_fm_contact_person_email', contact[0].contact_email);\n\t\t\t\t\t\t\tfrm.set_value('one_fm_contact_person_phone', contact[0].contact_mobile);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfrm.set_value('one_fm_warehouse_location', contact[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\tone_fm_type_of_purchase: function(frm) {\n\t\tset_field_property_for_documents(frm);\n\t},\n\tone_fm_other_documents_required: function(frm) {\n\t\tset_field_property_for_other_documents(frm);\n\t}\n});\n\nvar set_field_property_for_other_documents = function(frm) {\n\tif(frm.doc.one_fm_other_documents_required && frm.doc.one_fm_other_documents_required == 'Yes'){\n\t\tfrm.set_df_property('one_fm_details_of_other_documents', 'reqd', true);\n\t}\n\telse{\n\t\tfrm.set_df_property('one_fm_details_of_other_documents', 'reqd', false);\n\t\tfrm.set_value('one_fm_details_of_other_documents', '');\n\t}\n};\n\nvar set_field_property_for_documents = function(frm) {\n\tif(frm.doc.one_fm_type_of_purchase && frm.doc.one_fm_type_of_purchase == \"Import\"){\n\t\tfrm.set_df_property('one_fm_certificate_of_origin_required', 'reqd', true);\n\t\tfrm.set_df_property('one_fm_other_documents_required', 'reqd', true);\n\t}\n\telse{\n\t\tfrm.set_df_property('one_fm_certificate_of_origin_required', 'reqd', false);\n\t\tfrm.set_df_property('one_fm_other_documents_required', 'reqd', false);\n\t\tfrm.set_value('one_fm_certificate_of_origin_required', '');\n\t\tfrm.set_value('one_fm_other_documents_required', '');\n\t}\n};\n\nvar hide_tax_fields = function(frm) {\n\tlet field_list = ['tax_category', 'section_break_52', 'taxes_and_charges', 'taxes', 'sec_tax_breakup', 'totals'];\n\tfield_list.forEach((field, i) => {\n\t\tfrm.set_df_property(field, 'hidden', true);\n\t});\n};\n\nvar hide_subscription_section = function(frm) {\n\tfrm.set_df_property('subscription_section', 'hidden', true);\n};\n"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "modified": "2020-07-25 20:19:19.729266",
  "name": "Purchase Receipt-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Purchase Receipt', {\n\trefresh(frm) {\n\t\tif(frm.doc.docstatus == 1){\n\t\t    frm.add_custom_button(__(\"Material Delivery Note\"),\n\t\t        () => frm.events.make_material_delivery_note(frm), __('Create'));\n\t\t}\n\t},\n\tmake_material_delivery_note: function(frm) {\n\t\tfrappe.model.open_mapped_doc({\n\t\t\tmethod: \"one_fm.purchase.utils.make_material_delivery_note\",\n\t\t\tfrm: frm,\n\t\t\trun_link_triggers: true\n\t\t});\n\t}\n})\n"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "modified": "2020-07-25 20:22:10.707850",
  "name": "Payment Entry-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Payment Entry', {\n\trefresh(frm) {\n\t\tset_payment_details_for_po(frm);\n\t},\n\tparty(frm) {\n\t\tset_party_bank_account(frm);\n\t},\n\tone_fm_mode_of_payment_type(frm) {\n\t\tset_party_bank_account(frm);\n\t}\n});\n\nvar set_payment_details_for_po = function(frm) {\n\tif(frm.doc.references && frm.doc.references.length > 0){\n\t\tif(frm.doc.references[0].reference_doctype == 'Purchase Order'){\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'one_fm.purchase.utils.get_payment_details_for_po',\n\t\t\t\targs: {'po': frm.doc.references[0].reference_name},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tif(r && r.message){\n\t\t\t\t\t\tlet data = r.message;\n\t\t\t\t\t\tif(data.mode_of_payment){\n\t\t\t\t\t\t\tfrm.set_value('mode_of_payment', data.mode_of_payment);\n\t\t\t\t\t\t\tset_party_bank_account(frm);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(data.payment_amount){\n\t\t\t\t\t\t\tfrm.set_value('paid_amount', data.payment_amount);\n\t\t\t\t\t\t\tfrappe.model.set_value(frm.doc.references[0].doctype, frm.doc.references[0].name, 'allocated_amount', data.payment_amount);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfrm.refresh_field('references');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n};\n\nvar set_party_bank_account = function(frm) {\n\tif(frm.doc.party_type && frm.doc.party && frm.doc.one_fm_mode_of_payment_type == 'Bank'){\n\t\tfrappe.db.get_value('Bank Account', {'party_type': frm.doc.party_type, 'party': frm.doc.party}, 'name', function(r) {\n\t\t\tfrm.set_value('party_bank_account', r.name);\n\t\t});\n\t}\n};\n"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Request",
  "modified": "2020-07-25 20:21:31.843737",
  "name": "Payment Request-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Payment Request', {\n\trefresh(frm) {\n\t\tset_payment_details_for_po(frm);\n\t}\n});\n\nvar set_payment_details_for_po = function(frm) {\n\tif(frm.doc.reference_doctype == 'Purchase Order'){\n\t\tfrappe.call({\n\t\t\tmethod: 'one_fm.purchase.utils.get_payment_details_for_po',\n\t\t\targs: {'po': frm.doc.reference_name},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r && r.message){\n\t\t\t\t\tlet data = r.message;\n\t\t\t\t\tif(data.mode_of_payment){\n\t\t\t\t\t\tfrm.set_value('mode_of_payment', data.mode_of_payment);\n\t\t\t\t\t}\n\t\t\t\t\tif(data.payment_amount){\n\t\t\t\t\t\tfrm.set_value('grand_total', data.payment_amount)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n};\n"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "modified": "2020-05-22 16:27:03.963651",
  "name": "Stock Entry-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Stock Entry', {\n\tsupplier_purchase_order: function(frm) {\n\n        cur_frm.doc.items = []\n        frappe.model.with_doc(\"Supplier Purchase Order\", frm.doc.supplier_purchase_order, function() {\n            var tabletransfer= frappe.model.get_doc(\"Supplier Purchase Order\", frm.doc.supplier_purchase_order)\n            frm.doc.items = []\n            frm.refresh_field(\"items\");\n            $.each(tabletransfer.items, function(index, row){\n                var d = frm.add_child(\"items\");\n                d.t_warehouse = tabletransfer.place_of_delivery;\n                d.item_code = row.item_code;\n                d.description = row.item_name;\n                d.qty = row.qty;\n                d.uom = row.uom;\n                d.basic_rate = row.unit_price;\n                frm.refresh_field(\"items\");\n            });  \n        });\n\n    },\n    onload: function(frm) {\n        frm.set_query(\"supplier_purchase_order\", function() {\n            return {\n                filters: [\n                    ['Supplier Purchase Order', 'docstatus', '=', 1]\n                ]\n            }\n        });\n\n\t}\n})"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "modified": "2020-05-21 18:45:54.006807",
  "name": "Supplier-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Supplier', {\n\trefresh(frm) {\n\t\t\n\n\t\tcur_frm.set_query(\"group\", \"supplier_group_table\", function(doc, cdt, cdn) {\n            var d = locals[cdt][cdn];\n            return {\n                filters: [\n                    ['Item Group', 'parent_item_group', '=', 'All Item Groups']\n                ]\n            }\n        });\n\n        cur_frm.set_query(\"subgroup\", \"supplier_group_table\", function(doc, cdt, cdn) {\n            var d = locals[cdt][cdn];\n            return {\n                filters: [\n                    ['Item Group', 'parent_item_group', '=', d.group]\n                ]\n            }\n        });\n\n\n\t},\n\tstatus: function(frm) {\n        if (frm.doc.status == 'Enable') {\n            frm.set_value(\"disabled\", 0);\n        } else {\n            frm.set_value(\"disabled\", 1);\n        }\n    }\n})"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Opening",
  "modified": "2020-05-13 08:29:33.400820",
  "name": "Job Opening-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Job Opening', {\n  refresh(frm) {\n    set_my_dash_board(frm);\n    frm.set_query('agency', 'one_fm_active_willing_agency', function(doc) {\n      return {\n        filters: {\n          'active': true\n        }\n      }\n    });\n  },\n  one_fm_job_post_valid_till: function(frm) {\n    validate_date(frm);\n  }\n});\n\nvar validate_date = function(frm) {\n\tif(frm.doc.one_fm_job_post_valid_till < frm.doc.one_fm_job_opening_created){\n\t\tfrappe.throw(__(\"Job Post Valid Till Date cannot be before Job Opening Created Date\"));\n\t}\n\tif(frm.doc.one_fm_job_post_valid_till < frappe.datetime.now_date()){\n\t\tfrappe.throw(__(\"Job Post Valid Till Date cannot be before Today\"));\n\t}\n};\n\nvar set_my_dash_board = function(frm) {\n\tdashboard_link_doctype(frm, \"Note\");\n\n\t// Hide + button\n\tif(frm.doc.disabled){\n\t\t\tlet db_btns = $('.form-dashboard-wrapper').find('.btn-new').find('.btn-new');\n\t\t\t$.each(db_btns.prevObject, function(i, d) {\n\t\t\t\t\t$(d).hide();\n\t\t\t});\n\t}\n};\n\nvar dashboard_link_doctype = function (frm, doctype){\n\tvar parent = $('.form-dashboard-wrapper [data-doctype=\"Job Applicant\"]').closest('div').parent();\n\tparent.find('[data-doctype=\"'+doctype+'\"]').remove();\n\tparent.append(frappe.render_template(\"dashboard_link_doctype\", {doctype:doctype}));\n\tvar self = parent.find('[data-doctype=\"'+doctype+'\"]');\n\t// set_open_count(frm, doctype);\n\n\t// bind links\n\tself.find(\".badge-link\").on('click', function() {\n\t\tfrappe.route_options = {\"one_fm_job_opening\": frm.doc.name};\n\t\tfrappe.set_route(\"List\", doctype);\n\t});\n\n\t// bind open notifications\n\tself.find('.open-notification').on('click', function() {\n\t\tfrappe.route_options = {\n\t\t\t\"one_fm_job_opening\": frm.doc.name\n\t\t};\n\t\tfrappe.set_route(\"List\", doctype);\n\t});\n\n\t// bind new\n\tif(frappe.model.can_create(doctype)) {\n\t\tself.find('.btn-new').removeClass('hidden');\n\t}\n\tself.find('.btn-new').on('click', function() {\n\t\tfrappe.new_doc(doctype,{\n\t\t\t\"one_fm_job_opening\": frm.doc.name\n\t\t});\n\t});\n};\nfrappe.templates[\"dashboard_link_doctype\"] = ' \\\n<div class=\"document-link\" data-doctype=\"{{ doctype }}\"> \\\n<a class=\"badge-link small\">{{ __(doctype) }}</a> \\\n<span class=\"text-muted small count\"></span> \\\n<span class=\"open-notification hidden\" title=\"{{ __(\"List {0}\", [__(doctype)])}}\"></span> \\\n<button class=\"btn btn-new btn-default btn-xs hidden\" data-doctype=\"{{ doctype }}\"> \\\n<i class=\"octicon octicon-plus\" style=\"font-size: 12px;\"></i> \\\n</button>\\\n</div>';\n"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Warehouse",
  "modified": "2020-08-04 21:27:29.909023",
  "name": "Warehouse-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Warehouse', {\n\tstatus: function(frm) {\n        if (frm.doc.status == 'Enable') {\n            frm.set_value(\"disabled\", 0);\n        } else {\n            frm.set_value(\"disabled\", 1);\n        }\n    }\n})"
 }
]
